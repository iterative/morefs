[build-system]
requires = ["setuptools>=48", "setuptools_scm[toml]>=6.3.1"]
build-backend = "setuptools.build_meta"

[project]
name = "morefs"
description = "A collection of self-contained fsspec-based filesystems"
readme = "README.rst"
license = {text = "Apache-2.0"}
authors = [{name = "Iterative", email = "saugat@iterative.ai"}]
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Development Status :: 4 - Beta"
]
requires-python = ">=3.8"
dynamic = ["version"]
dependencies = [
  "fsspec"
]

[project.urls]
Issues = "https://github.com/iterative/morefs/issues"
Source = "https://github.com/iterative/morefs"

[project.optional-dependencies]
memfs = [
  "pygtrie>=2.3.2"
]
asynclocalfs = [
  "fsspec>=2022.10.0",
  "typing_extensions>=3.10.0; python_version < '3.10'",
  "aiofile>=3.8.5,<4"
]
asynclocal = [
  "morefs[asynclocalfs]"
]
all = [
  "morefs[memfs,asynclocalfs]"
]
tests = [
  "morefs[all]",
  "pytest>=7,<9",
  "pytest-asyncio>=0.21.0,<1",
  "pytest-cov>=4.1.0",
  "pytest-mock",
  "pytest-sugar"
]
dev = [
  "morefs[tests,all]",
  "mypy==1.10.0"
]

[project.entry-points."fsspec.specs"]
memfs = "morefs.memory:MemFS"
dictfs = "morefs.dict:DictFS"
overlayfs = "morefs.overlay:OverlayFileSystem"
asynclocal = "morefs.asyn_local:AsyncLocalFileSystem"

[tool.setuptools.packages.find]
where = ["src"]
namespaces = false

[tool.setuptools_scm]

[tool.pytest.ini_options]
addopts = "-ra"

[tool.coverage.run]
branch = true
source = ["morefs", "tests"]

[tool.coverage.paths]
source = ["src", "*/site-packages"]

[tool.coverage.report]
show_missing = true
exclude_lines = [
  "pragma: no cover",
  "if __name__ == .__main__.:",
  "if typing.TYPE_CHECKING:",
  "if TYPE_CHECKING:",
  "raise NotImplementedError",
  "raise AssertionError",
  "@overload"
]

[tool.mypy]
# Error output
show_column_numbers = true
show_error_codes = true
show_error_context = true
show_traceback = true
pretty = true
check_untyped_defs = false
# Warnings
warn_no_return = true
warn_redundant_casts = true
warn_unreachable = true
ignore_missing_imports = true
files = ["src", "tests"]

[tool.codespell]
ignore-words-list = "fo,cachable,afile"

[tool.ruff]
output-format = "full"
show-fixes = true

[tool.ruff.lint]
ignore = [
  "N818",
  "S101",
  "ISC001",
  "PT004",
  "PT007",
  "RET502",
  "RET503",
  "SIM105",
  "SIM108",
  "SIM117",
  "TRY003",
  "TRY300",
  "PLR2004",
  "PLW2901",
  "LOG007"
]
select = [
  "F",
  "E",
  "W",
  "C90",
  "I",
  "N",
  "UP",
  "YTT",
  "ASYNC",
  "S",
  "BLE",
  "B",
  "A",
  "C4",
  "T10",
  "EXE",
  "ISC",
  "ICN",
  "G",
  "INP",
  "PIE",
  "T20",
  "PYI",
  "PT",
  "Q",
  "RSE",
  "RET",
  "SLOT",
  "SIM",
  "TID",
  "TCH",
  "ARG",
  "PGH",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "TRY",
  "FLY",
  "PERF101",
  "LOG",
  "RUF"
]

[tool.ruff.lint.flake8-unused-arguments]
ignore-variadic-names = true

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false
parametrize-names-type = "csv"

[tool.ruff.lint.per-file-ignores]
"noxfile.py" = ["D", "PTH"]
"tests/**" = ["S", "ARG001", "ARG002", "ANN"]
"docs/**" = ["INP"]

[tool.ruff.lint.flake8-type-checking]
strict = true
